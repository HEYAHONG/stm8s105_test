                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.8.0 #10562 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _Delay
                                     13 	.globl _app_loop
                                     14 	.globl _app_init
                                     15 	.globl _driver_loop
                                     16 	.globl _driver_init
                                     17 ;--------------------------------------------------------
                                     18 ; ram data
                                     19 ;--------------------------------------------------------
                                     20 	.area DATA
                                     21 ;--------------------------------------------------------
                                     22 ; ram data
                                     23 ;--------------------------------------------------------
                                     24 	.area INITIALIZED
                                     25 ;--------------------------------------------------------
                                     26 ; Stack segment in internal ram 
                                     27 ;--------------------------------------------------------
                                     28 	.area	SSEG
      000000                         29 __start__stack:
      000000                         30 	.ds	1
                                     31 
                                     32 ;--------------------------------------------------------
                                     33 ; absolute external ram data
                                     34 ;--------------------------------------------------------
                                     35 	.area DABS (ABS)
                                     36 
                                     37 ; default segment ordering for linker
                                     38 	.area HOME
                                     39 	.area GSINIT
                                     40 	.area GSFINAL
                                     41 	.area CONST
                                     42 	.area INITIALIZER
                                     43 	.area CODE
                                     44 
                                     45 ;--------------------------------------------------------
                                     46 ; interrupt vector 
                                     47 ;--------------------------------------------------------
                                     48 	.area HOME
      000000                         49 __interrupt_vect:
      000000 82v00u00u00             50 	int s_GSINIT ; reset
      000004 82v00u00u00             51 	int _TRAP_IRQHandler ; trap
      000008 82v00u00u00             52 	int _TLI_IRQHandler ; int0
      00000C 82v00u00u00             53 	int _AWU_IRQHandler ; int1
      000010 82v00u00u00             54 	int _CLK_IRQHandler ; int2
      000014 82v00u00u00             55 	int _EXTI_PORTA_IRQHandler ; int3
      000018 82v00u00u00             56 	int _EXTI_PORTB_IRQHandler ; int4
      00001C 82v00u00u00             57 	int _EXTI_PORTC_IRQHandler ; int5
      000020 82v00u00u00             58 	int _EXTI_PORTD_IRQHandler ; int6
      000024 82v00u00u00             59 	int _EXTI_PORTE_IRQHandler ; int7
      000028 82 00 00 00             60 	int 0x000000 ; int8
      00002C 82 00 00 00             61 	int 0x000000 ; int9
      000030 82v00u00u00             62 	int _SPI_IRQHandler ; int10
      000034 82v00u00u00             63 	int _TIM1_UPD_OVF_TRG_BRK_IRQHandler ; int11
      000038 82v00u00u00             64 	int _TIM1_CAP_COM_IRQHandler ; int12
      00003C 82v00u00u00             65 	int _TIM2_UPD_OVF_BRK_IRQHandler ; int13
      000040 82v00u00u00             66 	int _TIM2_CAP_COM_IRQHandler ; int14
      000044 82 00 00 00             67 	int 0x000000 ; int15
      000048 82 00 00 00             68 	int 0x000000 ; int16
      00004C 82 00 00 00             69 	int 0x000000 ; int17
      000050 82 00 00 00             70 	int 0x000000 ; int18
      000054 82v00u00u00             71 	int _I2C_IRQHandler ; int19
      000058 82v00u00u00             72 	int _UART2_TX_IRQHandler ; int20
      00005C 82v00u00u00             73 	int _UART2_RX_IRQHandler ; int21
      000060 82v00u00u00             74 	int _ADC1_IRQHandler ; int22
      000064 82v00u00u00             75 	int _TIM4_UPD_OVF_IRQHandler ; int23
      000068 82v00u00u00             76 	int _EEPROM_EEC_IRQHandler ; int24
                                     77 ;--------------------------------------------------------
                                     78 ; global & static initialisations
                                     79 ;--------------------------------------------------------
                                     80 	.area HOME
                                     81 	.area GSINIT
                                     82 	.area GSFINAL
                                     83 	.area GSINIT
      000000                         84 __sdcc_gs_init_startup:
      000000                         85 __sdcc_init_data:
                                     86 ; stm8_genXINIT() start
      000000 AEr00r00         [ 2]   87 	ldw x, #l_DATA
      000003 27 07            [ 1]   88 	jreq	00002$
      000005                         89 00001$:
      000005 72 4FuFFuFF      [ 1]   90 	clr (s_DATA - 1, x)
      000009 5A               [ 2]   91 	decw x
      00000A 26 F9            [ 1]   92 	jrne	00001$
      00000C                         93 00002$:
      00000C AEr00r00         [ 2]   94 	ldw	x, #l_INITIALIZER
      00000F 27 09            [ 1]   95 	jreq	00004$
      000011                         96 00003$:
      000011 D6uFFuFF         [ 1]   97 	ld	a, (s_INITIALIZER - 1, x)
      000014 D7uFFuFF         [ 1]   98 	ld	(s_INITIALIZED - 1, x), a
      000017 5A               [ 2]   99 	decw	x
      000018 26 F7            [ 1]  100 	jrne	00003$
      00001A                        101 00004$:
                                    102 ; stm8_genXINIT() end
                                    103 	.area GSFINAL
      000000 CCr00r6C         [ 2]  104 	jp	__sdcc_program_startup
                                    105 ;--------------------------------------------------------
                                    106 ; Home
                                    107 ;--------------------------------------------------------
                                    108 	.area HOME
                                    109 	.area HOME
      00006C                        110 __sdcc_program_startup:
      00006C CCr00r27         [ 2]  111 	jp	_main
                                    112 ;	return from main will return to caller
                                    113 ;--------------------------------------------------------
                                    114 ; code
                                    115 ;--------------------------------------------------------
                                    116 	.area CODE
                                    117 ;	main.c: 5: void Delay(u32 i)
                                    118 ;	-----------------------------------------
                                    119 ;	 function Delay
                                    120 ;	-----------------------------------------
      000000                        121 _Delay:
      000000 52 08            [ 2]  122 	sub	sp, #8
                                    123 ;	main.c: 7: while(i--);
      000002 16 0B            [ 2]  124 	ldw	y, (0x0b, sp)
      000004 17 05            [ 2]  125 	ldw	(0x05, sp), y
      000006 16 0D            [ 2]  126 	ldw	y, (0x0d, sp)
      000008                        127 00101$:
      000008 1E 05            [ 2]  128 	ldw	x, (0x05, sp)
      00000A 1F 01            [ 2]  129 	ldw	(0x01, sp), x
      00000C 93               [ 1]  130 	ldw	x, y
      00000D 72 A2 00 01      [ 2]  131 	subw	y, #0x0001
      000011 7B 06            [ 1]  132 	ld	a, (0x06, sp)
      000013 A2 00            [ 1]  133 	sbc	a, #0x00
      000015 6B 06            [ 1]  134 	ld	(0x06, sp), a
      000017 7B 05            [ 1]  135 	ld	a, (0x05, sp)
      000019 A2 00            [ 1]  136 	sbc	a, #0x00
      00001B 6B 05            [ 1]  137 	ld	(0x05, sp), a
      00001D 5D               [ 2]  138 	tnzw	x
      00001E 26 E8            [ 1]  139 	jrne	00101$
      000020 1E 01            [ 2]  140 	ldw	x, (0x01, sp)
      000022 26 E4            [ 1]  141 	jrne	00101$
                                    142 ;	main.c: 8: }
      000024 5B 08            [ 2]  143 	addw	sp, #8
      000026 81               [ 4]  144 	ret
                                    145 ;	main.c: 9: int main()
                                    146 ;	-----------------------------------------
                                    147 ;	 function main
                                    148 ;	-----------------------------------------
      000027                        149 _main:
                                    150 ;	main.c: 11: driver_init();
      000027 CDr00r00         [ 4]  151 	call	_driver_init
                                    152 ;	main.c: 12: app_init();
      00002A CDr00r00         [ 4]  153 	call	_app_init
                                    154 ;	main.c: 13: while(1)
      00002D                        155 00102$:
                                    156 ;	main.c: 15: driver_loop();
      00002D CDr00r00         [ 4]  157 	call	_driver_loop
                                    158 ;	main.c: 16: app_loop();
      000030 CDr00r00         [ 4]  159 	call	_app_loop
      000033 20 F8            [ 2]  160 	jra	00102$
                                    161 ;	main.c: 19: }
      000035 81               [ 4]  162 	ret
                                    163 	.area CODE
                                    164 	.area CONST
                                    165 	.area INITIALIZER
                                    166 	.area CABS (ABS)
